class Fraction {
	field int numerator, denominator;
	
	constructor Fraction new (int num, int den){
		let numerator=num;
		let denominator=den;
		do reduce();
		return this;
	}

	function int gcd (int a, int b){
		var int r;
		while (~(b=0)) {
			let r = a - (b * (a / b));
			let a = b;
			let b = r;
		}
		return a;
	}

	method void reduce() {
		var int g;
		let g = Fraction.gcd(numerator, denominator);
		if (g > 1){
			let numerator = numerator / g;
			let denominator = denominator / g;
		}
		return;
	}
	
	method Fraction plus(Fraction other, int c) {
		var int sum;
		let sum = c * denominator * other.getDenominator() + (numerator * other.getDenominator()) + (other.getNumerator() * denominator);
		return Fraction.new(sum, denominator * other.getDenominator());
	}
	
	method int getNumerator() { return numerator; }
	method int getDenominator() {return denominator; }

	method void print() {
		do Output.printInt(numerator);
		do Output.printString("/");
		do Output.printInt(denominator);
		return;
	}
} 
