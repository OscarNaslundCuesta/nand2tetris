function Fraction.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push pointer 0
call Fraction.reduce 1
pop temp 0
push pointer 0
return
function Fraction.gcd 1
label L1
push argument 1
push constant 0
eq
not
if-goto L2
goto L3
label L2
push argument 0
push argument 1
push argument 0
push argument 1
call Math.divide 2
call Math.multiply 2
sub
pop local 0
push argument 1
pop argument 0
push local 0
pop argument 1
goto L1
label L3
push argument 0
return
function Fraction.reduce 1
push argument 0
pop pointer 0
push this 0
push this 1
call Fraction.gcd 2
pop local 0
push local 0
push constant 1
gt
if-goto L4
goto L5
label L4
push this 0
push local 0
call Math.divide 2
pop this 0
push this 1
push local 0
call Math.divide 2
pop this 1
label L5
push constant 0
return
function Fraction.plus 1
push argument 0
pop pointer 0
push argument 2
push this 1
call Math.multiply 2
push argument 1
call Fraction.getDenominator 1
call Math.multiply 2
push this 0
push argument 1
call Fraction.getDenominator 1
call Math.multiply 2
add
push argument 1
call Fraction.getNumerator 1
push this 1
call Math.multiply 2
add
pop local 0
push local 0
push this 1
push argument 1
call Fraction.getDenominator 1
call Math.multiply 2
call Fraction.new 2
return
function Fraction.getNumerator 0
push argument 0
pop pointer 0
push this 0
return
function Fraction.getDenominator 0
push argument 0
pop pointer 0
push this 1
return
function Fraction.print 0
push argument 0
pop pointer 0
push this 0
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 47
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push constant 0
return