@256
D=A
@SP
M=D
@_1//CallStart.pushReturnAddr
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL//pushLCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG//pushARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS//pushTHIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT//pushTHAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP//repositionARG
D=M
@5
D=D-A
@ARG
M=D
@SP//LCL=SP
D=M
@LCL
M=D
@Sys.init//Call.goto
0;JMP
(_1)//CallEnd
(Main.fibonacci)
@ARG
D=M
@0//PushArg0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2//PushConstant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP//LT
AM=M-1
D=M
@R13
M=D
@SP
AM=M-1
D=M
@R13
D=M-D
@_2
D;JGT
@_3
D;JLE
(_2)
@SP
A=M
M=-1
@_4
0;JMP
(_3)
@SP
A=M
M=0
@_4
0;JMP
(_4)
@SP
M=M+1
@SP//if-goto
AM=M-1
D=M
@Main$$IF_TRUE
D;JNE
@Main$$IF_FALSE//goto
0;JMP
(Main$$IF_TRUE)
@ARG
D=M
@0//PushArg0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL//ReturnStart
D=M
@R13
M=D
@R13//RET=FRAME-5
D=M
@5
A=D-A
D=M
@R14
M=D
@SP//*ARG=pop()
AM=M-1
D=M
@ARG
A=M
M=D
@ARG//SP=ARG+1
D=M
D=D+1
@SP
M=D
@R13//restoreTHAT
D=M
A=D-1
D=M
@THAT
M=D
@R13//restoreTHIS
D=M
D=D-1
A=D-1
D=M
@THIS
M=D
@R13//restoreARG
D=M
D=D-1
D=D-1
A=D-1
D=M
@ARG
M=D
@R13//restoreLCL
D=M
D=D-1
D=D-1
D=D-1
A=D-1
D=M
@LCL
M=D
@R14//gotoRETURNaddr
A=M
0;JMP//JumpReturnEnd
(Main$$IF_FALSE)
@ARG
D=M
@0//PushArg0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2//PushConstant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP//sub
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
@_5//CallStart.pushReturnAddr
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL//pushLCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG//pushARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS//pushTHIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT//pushTHAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP//repositionARG
D=M
@5
D=D-A
@ARG
M=D
@ARG//nArgs0
M=M-1
@SP//LCL=SP
D=M
@LCL
M=D
@Main.fibonacci//Call.goto
0;JMP
(_5)//CallEnd
@ARG
D=M
@0//PushArg0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1//PushConstant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP//sub
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
@_6//CallStart.pushReturnAddr
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL//pushLCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG//pushARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS//pushTHIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT//pushTHAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP//repositionARG
D=M
@5
D=D-A
@ARG
M=D
@ARG//nArgs0
M=M-1
@SP//LCL=SP
D=M
@LCL
M=D
@Main.fibonacci//Call.goto
0;JMP
(_6)//CallEnd
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M+D
@SP
M=M+1
@LCL//ReturnStart
D=M
@R13
M=D
@R13//RET=FRAME-5
D=M
@5
A=D-A
D=M
@R14
M=D
@SP//*ARG=pop()
AM=M-1
D=M
@ARG
A=M
M=D
@ARG//SP=ARG+1
D=M
D=D+1
@SP
M=D
@R13//restoreTHAT
D=M
A=D-1
D=M
@THAT
M=D
@R13//restoreTHIS
D=M
D=D-1
A=D-1
D=M
@THIS
M=D
@R13//restoreARG
D=M
D=D-1
D=D-1
A=D-1
D=M
@ARG
M=D
@R13//restoreLCL
D=M
D=D-1
D=D-1
D=D-1
A=D-1
D=M
@LCL
M=D
@R14//gotoRETURNaddr
A=M
0;JMP//JumpReturnEnd
(Sys.init)
@4//PushConstant
D=A
@SP
A=M
M=D
@SP
M=M+1
@_7//CallStart.pushReturnAddr
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL//pushLCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG//pushARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS//pushTHIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT//pushTHAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP//repositionARG
D=M
@5
D=D-A
@ARG
M=D
@ARG//nArgs0
M=M-1
@SP//LCL=SP
D=M
@LCL
M=D
@Main.fibonacci//Call.goto
0;JMP
(_7)//CallEnd
(Sys$$WHILE)
@Sys$$WHILE//goto
0;JMP
@_8
(_8)
0;JMP
